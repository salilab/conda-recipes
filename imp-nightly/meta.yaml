package:
  name: imp-nightly
  version: 20210519

source:
  fn: imp-20210519.develop.d63e9b2723.tar.gz
  url: https://integrativemodeling.org/nightly/download/imp-20210519.develop.d63e9b2723.tar.gz
  patches:
    - bc-clustering.patch [osx]
    - imp-directories.patch [win]

build:
  number: 0
  detect_binary_files_with_prefix: True [not win]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    - pkg-config [not win]
    - swig
    - cmake
    - ninja
  host:
    - python
    - rmf
    - ihm
    - boost-cpp
    - hdf5
    # We need both the libprotobuf library and the Python wrappers
    - protobuf
    # We only need the library; we don't use the OpenCV Python wrappers
    - libopencv
    - eigen
    # Force usage of conda-forge fftw, not salilab
    - fftw >3.3.4
    - libtau
    - gsl
    - cgal-cpp
    - openmpi [osx]
    - mpich [linux64]
      # For windows, need to install Microsoft MPI

  run:
    - python
    # RMF does not pin its exports, but we link against the C++ DSO
    - {{ pin_compatible('rmf', max_pin='x.x') }}
    - ihm
    - gmp
    - mpfr
    # No need to pin packages that define run_exports
    - libopencv
    - openmpi [osx]
    - mpich [linux64]
    # Don't need to pin protobuf because libopencv already pins libprotobuf
    - protobuf
    - {{ pin_compatible('boost-cpp', max_pin='x.x.x') }}
    - {{ pin_compatible('hdf5', max_pin='x.x.x') }}
    - {{ pin_compatible('fftw', max_pin='x.x') }}
    - {{ pin_compatible('gsl', max_pin='x.x') }}
    - {{ pin_compatible('libtau', max_pin='x.x') }}

test:
  # Need Eigen to test IMPConfig.cmake
  requires:
    - eigen
  # Python imports
  imports:
    - IMP
    - IMP.atom
    - IMP.cgal
    - IMP.em2d
    - IMP.npc
    - IMP.npctransport
    - IMP.bayesianem
    - IMP.sampcon
    - IMP.rmf
    - IMP.mpi
    - IMP.spb
    - IMP.cnmultifit
    - RMF
  # Command line tools
  commands:
    - foxs --help
    - spb_test_score --help
    - cnmultifit --help

about:
  home: https://integrativemodeling.org
  license: LGPL/GPL
  license_file: COPYING.LGPL
  summary: "The Integrative Modeling Platform"
  description: >
    IMP's broad goal is to contribute to a comprehensive structural
    characterization of biomolecules ranging in size and complexity from small
    peptides to large macromolecular assemblies, by integrating data from
    diverse biochemical and biophysical experiments. IMP provides an open
    source C++ and Python toolbox for solving complex modeling problems, and a
    number of applications for tackling some common problems in a user-friendly
    way. IMP can also be used from the
    [Chimera](http://www.cgl.ucsf.edu/chimera/) molecular modeling system,
    or via one of several web applications.

    See [the IMP website](https://integrativemodeling.org/) for more details.

    If you have problems with this conda package, please
    [open an issue](https://github.com/salilab/conda-recipes/issues).
  doc_url: https://integrativemodeling.org/doc.html
  dev_url: https://github.com/salilab/imp/

extra:
  recipe-maintainers:
    - benmwebb
