{% set PY_VER_MAJOR = PY_VER[0] %}
{% set PY_VER_MINOR = PY_VER[2] %}

package:
  name: imp
  version: "2.14.0"

source:
  fn: imp-2.14.0.tar.gz [not win]
  url: https://integrativemodeling.org/2.14.0/download/imp-2.14.0.tar.gz [not win]
  sha256: 67c7b5c4a57949786cd65d9f918694b59c9f11f5cf1515b8d13970a908e58126 [not win]
  fn: imp-2.14.0.zip [win]
  url: https://integrativemodeling.org/2.14.0/download/imp-2.14.0.zip [win]
  sha256: 64f3f44b45c5b8844c8249f0dba340833b1c2d20e66b74496fb48714fabc93f6 [win]
  patches:
    - bc-clustering.patch [osx]
    - imp-directories.patch [win]
    - vs2008-ice.patch [win and py27]

build:
  number: 0
  string: py{{ PY_VER_MAJOR }}{{ PY_VER_MINOR }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
  detect_binary_files_with_prefix: True [not win]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - python {{ python }}
    - swig
    - cgal
    - eigen
    - cmake [not win or not py27]
    - cmake-mac [win and py27]
    - boost
    - hdf5
    - fftw
    - libtau
    - gsl
    - protobuf
    - opencv-nopython [(win and py27) or (osx and py >= 38) or (win32 and py >= 38)]
    - opencv [not ((win and py27) or (osx and py >= 38) or (win32 and py >= 38))]
    - openmpi [osx]
    - mpich2 [linux32]
    - mpich [linux64]
      # For windows, need to install Microsoft MPI

  run:
    - python {{ python }}
    - {{ pin_compatible('cgal', max_pin='x.x') }}
    - {{ pin_compatible('boost', max_pin='x.x.x') }}
    - {{ pin_compatible('hdf5', max_pin='x.x.x') }}
    - {{ pin_compatible('fftw', max_pin='x.x') }}
    - {{ pin_compatible('libtau', max_pin='x.x') }}
    - {{ pin_compatible('gsl', max_pin='x.x') }}
    - {{ pin_compatible('opencv-nopython', max_pin='x.x') }} [(win and py27) or (osx and py >= 38) or (win32 and py >= 38)]
    - {{ pin_compatible('opencv', max_pin='x.x') }} [not ((win and py27) or (osx and py >= 38) or (win32 and py >= 38))]
    - {{ pin_compatible('protobuf', max_pin='x.x') }}
    - llvm-openmp [osx]
    - {{ pin_compatible('openmpi', max_pin='x.x') }} [osx]
    - {{ pin_compatible('mpich2', max_pin='x.x') }} [linux32]
    - {{ pin_compatible('mpich', max_pin='x.x') }} [linux64]

test:
  # Need Eigen to test IMPConfig.cmake
  requires:
    - eigen
  # Python imports
  imports:
    - IMP
    - IMP.atom
    - IMP.cgal
    - IMP.cnmultifit
    - IMP.em2d
    - IMP.npc
    - IMP.npctransport
    - IMP.bayesianem
    - IMP.sampcon
    - IMP.rmf
    - IMP.mpi
    - IMP.spb
    - RMF
  # Command line tools
  commands:
    - cnmultifit --help
    - foxs --help
    - spb_test_score --help

about:
  home: https://integrativemodeling.org
  license: LGPL/GPL
  summary: "The Integrative Modeling Platform"
  description: >
    IMP's broad goal is to contribute to a comprehensive structural
    characterization of biomolecules ranging in size and complexity from small
    peptides to large macromolecular assemblies, by integrating data from
    diverse biochemical and biophysical experiments. IMP provides an open
    source C++ and Python toolbox for solving complex modeling problems, and a
    number of applications for tackling some common problems in a user-friendly
    way. IMP can also be used from the
    [Chimera](http://www.cgl.ucsf.edu/chimera/) molecular modeling system,
    or via one of several web applications.

    See [the IMP website](https://integrativemodeling.org/) for more details.

    If you have problems with this conda package, please
    [open an issue](https://github.com/salilab/conda-recipes/issues).
